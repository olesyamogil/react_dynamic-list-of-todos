{"version":3,"sources":["components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/SortingButtonGroup/SortingButtonGroup.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["User","props","user","react_default","a","createElement","className","href","concat","email","name","defaultProps","TodoItem","todo","title","User_User","completed","TodoList","_ref","todos","map","TodoItem_TodoItem","key","id","SortingButtonGroup","Fragment","type","onClick","changeSortingType","data-sorting-type","TodoApp","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getDatafromServer","asyncToGenerator","regenerator_default","mark","_callee","url","wrap","_context","prev","next","abrupt","fetch","then","response","json","stop","_x","apply","arguments","state","isLoading","error","sortingType","loadTodos","bind","assertThisInitialized","event","setState","target","dataset","Promise","all","users","todosWithUsers","_objectSpread","find","userId","_this$state","sortedTodos","sort","b","components_SortingButtonGroup_SortingButtonGroup","components_TodoList_TodoList","Component","App","components_TodoApp_TodoApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bb27f1c7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User(props) {\n  const { user } = props;\n\n  return (\n    <a className=\"user-info\" href={`mailto:${user.email}`}>{user.name}</a>\n  );\n}\n\nUser.defaultProps = {\n  user: {},\n};\n\nUser.propTypes = {\n  user: PropTypes.objectOf,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\n\nfunction TodoItem(props) {\n  const { todo } = props;\n\n  return (\n    <tr>\n      <td className=\"item-title\">{todo.title}</td>\n      <td className=\"item-user\"><User user={todo.user} /></td>\n      <td className=\"item-status\">\n        {todo.completed ? 'Completed' : 'In progress'}\n      </td>\n    </tr>\n\n  );\n}\n\nTodoItem.defaultProps = {\n  todo: {},\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.objectOf(),\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\nimport './TodoList.css';\n\nfunction TodoList({ todos }) {\n  return (\n    <table className=\"todo-list\">\n      <thead className=\"todo-list-head\">\n        <tr>\n          <td>Title</td>\n          <td>Username</td>\n          <td>Status</td>\n        </tr>\n      </thead>\n      <tbody className=\"todo-list-body\">\n        {todos.map(todo => <TodoItem todo={todo} key={todo.id} />)}\n      </tbody>\n    </table>\n  );\n}\n\nTodoList.defaultProps = {\n  todos: [],\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SortingButtonGroup = props => (\n  <>\n    <button\n      type=\"button\"\n      onClick={props.changeSortingType}\n      data-sorting-type=\"title\"\n    >\n        Sort by title\n    </button>\n    <button\n      type=\"button\"\n      onClick={props.changeSortingType}\n      data-sorting-type=\"user\"\n    >\n        Sort by user\n    </button>\n    <button\n      type=\"button\"\n      onClick={props.changeSortingType}\n      data-sorting-type=\"completed\"\n    >\n        Sort by status\n    </button>\n  </>\n);\n\nSortingButtonGroup.propTypes = {\n  changeSortingType: PropTypes.func,\n};\n\nSortingButtonGroup.defaultProps = {\n  changeSortingType: {},\n};\n\nexport default SortingButtonGroup;\n","import React, { Component } from 'react';\nimport TodoList from '../TodoList/TodoList';\nimport SortingButtonGroup from '../SortingButtonGroup/SortingButtonGroup';\n\nclass TodoApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: null,\n      isLoading: false,\n      error: false,\n      sortingType: '',\n    };\n    this.loadTodos = this.loadTodos.bind(this);\n    this.changeSortingType = this.changeSortingType.bind(this);\n  }\n\n  getDatafromServer = async url => fetch(url)\n    .then(response => response.json());\n\n  changeSortingType(event) {\n    this.setState({ sortingType: event.target.dataset.sortingType });\n  }\n\n  async loadTodos() {\n    this.setState({\n      isLoading: true,\n      error: false,\n      sortingType: '',\n    });\n    try {\n      const [users, todos] = await Promise.all([\n        this.getDatafromServer('https://jsonplaceholder.typicode.com/users'),\n        this.getDatafromServer('https://jsonplaceholder.typicode.com/todos'),\n      ]);\n      const todosWithUsers = todos.map(todo => ({\n        ...todo,\n        user: users.find(user => user.id === todo.userId),\n      }));\n      this.setState({ todos: todosWithUsers });\n    } catch (e) {\n      this.setState({ error: true });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  render() {\n    const {\n      todos, isLoading, error, sortingType,\n    } = this.state;\n\n    if (todos === null) {\n      return (\n        <>\n          {error ? <p>Opps...Try again later.</p> : null}\n          <button type=\"button\" onClick={this.loadTodos}>\n            {`Load${isLoading ? 'ing...' : ''}`}\n          </button>\n        </>\n      );\n    }\n    const sortedTodos = this.state.todos.sort((a, b) => {\n      if (a[sortingType] > b[sortingType]) { return 1; }\n      return -1;\n    });\n    return (\n      <>\n        <SortingButtonGroup changeSortingType={this.changeSortingType} />\n        <TodoList todos={sortedTodos} />\n      </>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport './App.css';\nimport TodoApp from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}