{"version":3,"sources":["components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["User","props","user","react_default","a","createElement","className","href","concat","email","name","defaultProps","TodoItem","todo","title","User_User","completed","TodoList","_ref","todos","map","TodoItem_TodoItem","key","id","TodoApp","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getTodosWithUsers","todosList","usersList","_objectSpread","find","userId","getDatafromServer","asyncToGenerator","regenerator_default","mark","_callee","url","wrap","_context","prev","next","abrupt","fetch","then","response","json","stop","_x","apply","arguments","state","users","isLoading","error","sortingType","loadTodos","bind","assertThisInitialized","changeSortingType","event","setState","target","dataset","Promise","all","_this$state","Fragment","type","onClick","todosWithUsers","sort","b","data-sorting-type","components_TodoList_TodoList","Component","App","components_TodoApp_TodoApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1f2f404f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User(props) {\n  const { user } = props;\n\n  return (\n    <a className=\"user-info\" href={`mailto:${user.email}`}>{user.name}</a>\n  );\n}\n\nUser.defaultProps = {\n  user: {},\n};\n\nUser.propTypes = {\n  user: PropTypes.objectOf,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\n\nfunction TodoItem(props) {\n  const { todo } = props;\n\n  return (\n    <tr>\n      <td className=\"item-title\">{todo.title}</td>\n      <td className=\"item-user\"><User user={todo.user} /></td>\n      <td className=\"item-status\">\n        {todo.completed ? 'Completed' : 'In progress'}\n      </td>\n    </tr>\n\n  );\n}\n\nTodoItem.defaultProps = {\n  todo: {},\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.objectOf(),\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\nimport './TodoList.css';\n\nfunction TodoList({ todos }) {\n  return (\n    <table className=\"todo-list\">\n      <thead className=\"todo-list-head\">\n        <tr>\n          <td>Title</td>\n          <td>Username</td>\n          <td>Status</td>\n        </tr>\n      </thead>\n      <tbody className=\"todo-list-body\">\n        {todos.map(todo => <TodoItem todo={todo} key={todo.id} />)}\n      </tbody>\n    </table>\n  );\n}\n\nTodoList.defaultProps = {\n  todos: [],\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport TodoList from '../TodoList/TodoList';\n\nclass TodoApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: null,\n      todos: null,\n      isLoading: false,\n      error: false,\n      sortingType: '',\n    };\n    this.loadTodos = this.loadTodos.bind(this);\n    this.changeSortingType = this.changeSortingType.bind(this);\n  }\n\n  getTodosWithUsers = (todosList, usersList) => todosList.map(todo => ({\n    ...todo,\n    user: usersList.find(user => user.id === todo.userId),\n  }));\n\n  getDatafromServer = async url => fetch(url)\n    .then(response => response.json());\n\n  changeSortingType(event) {\n    this.setState({ sortingType: event.target.dataset.sortingType });\n  }\n\n  async loadTodos() {\n    this.setState({\n      isLoading: true,\n      error: false,\n      sortingType: '',\n    });\n    try {\n      const [users, todos] = await Promise.all([\n        this.getDatafromServer('https://jsonplaceholder.typicode.com/users'),\n        this.getDatafromServer('https://jsonplaceholder.typicode.com/todos'),\n      ]);\n      this.setState({ users, todos });\n    } catch (e) {\n      this.setState({ error: true });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  render() {\n    const {\n      todos, users, isLoading, error, sortingType,\n    } = this.state;\n\n    if (users === null || todos === null) {\n      return (\n        <>\n          {error ? <p>Opps...Try again later.</p> : null}\n          <button type=\"button\" onClick={this.loadTodos}>\n            {`Load${isLoading ? 'ing...' : ''}`}\n          </button>\n        </>\n      );\n    }\n    const todosWithUsers = this\n      .getTodosWithUsers(todos, users)\n      .sort((a, b) => {\n        if (a[sortingType] > b[sortingType]) { return 1; }\n        return -1;\n      });\n    return (\n      <>\n        <button\n          type=\"button\"\n          onClick={this.changeSortingType}\n          data-sorting-type=\"title\"\n        >\n          Sort by title\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.changeSortingType}\n          data-sorting-type=\"user\"\n        >\n          Sort by user\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.changeSortingType}\n          data-sorting-type=\"completed\"\n        >\n          Sort by status\n        </button>\n        <TodoList todos={todosWithUsers} />\n      </>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport './App.css';\nimport TodoApp from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}